{"version":3,"file":"cropper.esm.js","sources":["../src/js/global.js","../src/js/constants.js","../src/js/defaults.js","../src/js/template.js","../src/js/utilities.js","../src/js/render.js","../src/js/preview.js","../src/js/events.js","../src/js/handlers.js","../src/js/change.js","../src/js/methods.js","../src/js/cropper.js","../src/js/index.js"],"sourcesContent":["export default typeof window !== 'undefined' ? window : {};\n","import global from './global';\n\nexport const NAMESPACE = 'cropper';\n\n// Actions\nexport const ACTION_ALL = 'all';\nexport const ACTION_CROP = 'crop';\nexport const ACTION_MOVE = 'move';\nexport const ACTION_ZOOM = 'zoom';\nexport const ACTION_EAST = 'e';\nexport const ACTION_WEST = 'w';\nexport const ACTION_SOUTH = 's';\nexport const ACTION_NORTH = 'n';\nexport const ACTION_NORTH_EAST = 'ne';\nexport const ACTION_NORTH_WEST = 'nw';\nexport const ACTION_SOUTH_EAST = 'se';\nexport const ACTION_SOUTH_WEST = 'sw';\n\n// Classes\nexport const CLASS_CROP = `${NAMESPACE}-crop`;\nexport const CLASS_DISABLED = `${NAMESPACE}-disabled`;\nexport const CLASS_HIDDEN = `${NAMESPACE}-hidden`;\nexport const CLASS_HIDE = `${NAMESPACE}-hide`;\nexport const CLASS_INVISIBLE = `${NAMESPACE}-invisible`;\nexport const CLASS_MODAL = `${NAMESPACE}-modal`;\nexport const CLASS_MOVE = `${NAMESPACE}-move`;\n\n// Data keys\nexport const DATA_ACTION = 'action';\nexport const DATA_PREVIEW = 'preview';\n\n// Drag modes\nexport const DRAG_MODE_CROP = 'crop';\nexport const DRAG_MODE_MOVE = 'move';\nexport const DRAG_MODE_NONE = 'none';\n\n// Events\nexport const EVENT_CROP = 'crop';\nexport const EVENT_CROP_END = 'cropend';\nexport const EVENT_CROP_MOVE = 'cropmove';\nexport const EVENT_CROP_START = 'cropstart';\nexport const EVENT_DBLCLICK = 'dblclick';\nexport const EVENT_ERROR = 'error';\nexport const EVENT_LOAD = 'load';\nexport const EVENT_POINTER_DOWN = global.PointerEvent ? 'pointerdown' : 'touchstart mousedown';\nexport const EVENT_POINTER_MOVE = global.PointerEvent ? 'pointermove' : 'touchmove mousemove';\nexport const EVENT_POINTER_UP = global.PointerEvent ? ' pointerup pointercancel' : 'touchend touchcancel mouseup';\nexport const EVENT_READY = 'ready';\nexport const EVENT_RESIZE = 'resize';\nexport const EVENT_WHEEL = 'wheel mousewheel DOMMouseScroll';\nexport const EVENT_ZOOM = 'zoom';\n\n// RegExps\nexport const REGEXP_ACTIONS = /^(e|w|s|n|se|sw|ne|nw|all|crop|move|zoom)$/;\nexport const REGEXP_DATA_URL = /^data:/;\nexport const REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\nexport const REGEXP_TAG_NAME = /^(img|canvas)$/i;\n","import {\n  DRAG_MODE_CROP,\n} from './constants';\n\nexport default {\n  // Define the view mode of the cropper\n  viewMode: 0, // 0, 1, 2, 3\n\n  // Define the dragging mode of the cropper\n  dragMode: DRAG_MODE_CROP, // 'crop', 'move' or 'none'\n\n  // Define the aspect ratio of the crop box\n  aspectRatio: NaN,\n\n  // An object with the previous cropping result data\n  data: null,\n\n  // A selector for adding extra containers to preview\n  preview: '',\n\n  // Re-render the cropper when resize the window\n  responsive: true,\n\n  // Restore the cropped area after resize the window\n  restore: true,\n\n  // Check if the current image is a cross-origin image\n  checkCrossOrigin: true,\n\n  // Check the current image's Exif Orientation information\n  checkOrientation: true,\n\n  // Show the black modal\n  modal: true,\n\n  // Show the dashed lines for guiding\n  guides: true,\n\n  // Show the center indicator for guiding\n  center: true,\n\n  // Show the white modal to highlight the crop box\n  highlight: true,\n\n  // Show the grid background\n  background: true,\n\n  // Enable to crop the image automatically when initialize\n  autoCrop: true,\n\n  // Define the percentage of automatic cropping area when initializes\n  autoCropArea: 0.8,\n\n  // Enable to move the image\n  movable: true,\n\n  // Enable to rotate the image\n  rotatable: true,\n\n  // Enable to scale the image\n  scalable: true,\n\n  // Enable to zoom the image\n  zoomable: true,\n\n  // Enable to zoom the image by dragging touch\n  zoomOnTouch: true,\n\n  // Enable to zoom the image by wheeling mouse\n  zoomOnWheel: true,\n\n  // Define zoom ratio when zoom the image by wheeling mouse\n  wheelZoomRatio: 0.1,\n\n  // Enable to move the crop box\n  cropBoxMovable: true,\n\n  // Enable to resize the crop box\n  cropBoxResizable: true,\n\n  // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n  toggleDragModeOnDblclick: true,\n\n  // Size limitation\n  minCanvasWidth: 0,\n  minCanvasHeight: 0,\n  minCropBoxWidth: 0,\n  minCropBoxHeight: 0,\n  minContainerWidth: 200,\n  minContainerHeight: 100,\n\n  // Shortcuts of events\n  ready: null,\n  cropstart: null,\n  cropmove: null,\n  cropend: null,\n  crop: null,\n  zoom: null,\n};\n","export default (\n  '<div class=\"cropper-container\">' +\n    '<div class=\"cropper-wrap-box\">' +\n      '<div class=\"cropper-canvas\"></div>' +\n    '</div>' +\n    '<div class=\"cropper-drag-box\"></div>' +\n    '<div class=\"cropper-crop-box\">' +\n      '<span class=\"cropper-view-box\"></span>' +\n      '<span class=\"cropper-dashed dashed-h\"></span>' +\n      '<span class=\"cropper-dashed dashed-v\"></span>' +\n      '<span class=\"cropper-center\"></span>' +\n      '<span class=\"cropper-face\"></span>' +\n      '<span class=\"cropper-line line-e\" data-action=\"e\"></span>' +\n      '<span class=\"cropper-line line-n\" data-action=\"n\"></span>' +\n      '<span class=\"cropper-line line-w\" data-action=\"w\"></span>' +\n      '<span class=\"cropper-line line-s\" data-action=\"s\"></span>' +\n      '<span class=\"cropper-point point-e\" data-action=\"e\"></span>' +\n      '<span class=\"cropper-point point-n\" data-action=\"n\"></span>' +\n      '<span class=\"cropper-point point-w\" data-action=\"w\"></span>' +\n      '<span class=\"cropper-point point-s\" data-action=\"s\"></span>' +\n      '<span class=\"cropper-point point-ne\" data-action=\"ne\"></span>' +\n      '<span class=\"cropper-point point-nw\" data-action=\"nw\"></span>' +\n      '<span class=\"cropper-point point-sw\" data-action=\"sw\"></span>' +\n      '<span class=\"cropper-point point-se\" data-action=\"se\"></span>' +\n    '</div>' +\n  '</div>'\n);\n","import $ from 'jquery';\nimport global from './global';\n\n/**\n * Check if the given value is a string.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a string, else `false`.\n */\nexport function isString(value) {\n  return typeof value === 'string';\n}\n\n/**\n * Check if the given value is not a number.\n */\nexport const isNaN = Number.isNaN || global.isNaN;\n\n/**\n * Check if the given value is a number.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n */\nexport function isNumber(value) {\n  return typeof value === 'number' && !isNaN(value);\n}\n\n/**\n * Check if the given value is undefined.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n */\nexport function isUndefined(value) {\n  return typeof value === 'undefined';\n}\n\n/**\n * Takes a function and returns a new one that will always have a particular context.\n * Custom proxy to avoid jQuery's guid.\n * @param {Function} fn - The target function.\n * @param {Object} context - The new context for the function.\n * @returns {Function} The new function.\n */\nexport function proxy(fn, context, ...args) {\n  return (...args2) => fn.apply(context, args.concat(args2));\n}\n\n/**\n * Get the own enumerable properties of a given object.\n * @param {Object} obj - The target object.\n * @returns {Array} All the own enumerable properties of the given object.\n */\nexport const objectKeys = Object.keys || function objectKeys(obj) {\n  const keys = [];\n\n  $.each(obj, (key) => {\n    keys.push(key);\n  });\n\n  return keys;\n};\n\nconst REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/i;\n\n/**\n * Normalize decimal number.\n * Check out {@link http://0.30000000000000004.com/ }\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\nexport function normalizeDecimalNumber(value, times = 100000000000) {\n  return REGEXP_DECIMALS.test(value) ? (Math.round(value * times) / times) : value;\n}\n\nconst { location } = global;\nconst REGEXP_ORIGINS = /^(https?:)\\/\\/([^:/?#]+):?(\\d*)/i;\n\n/**\n * Check if the given URL is a cross origin URL.\n * @param {string} url - The target URL.\n * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n */\nexport function isCrossOriginURL(url) {\n  const parts = url.match(REGEXP_ORIGINS);\n\n  return parts && (\n    parts[1] !== location.protocol ||\n    parts[2] !== location.hostname ||\n    parts[3] !== location.port\n  );\n}\n\n/**\n * Add timestamp to the given URL.\n * @param {string} url - The target URL.\n * @returns {string} The result URL.\n */\nexport function addTimestamp(url) {\n  const timestamp = `timestamp=${(new Date()).getTime()}`;\n\n  return (url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp);\n}\n\n/**\n * Get transform values base on the given object.\n * @param {Object} obj - The target object.\n * @returns {string} A string contains transform values.\n */\nexport function getTransformValues({\n  rotate,\n  scaleX,\n  scaleY,\n  translateX,\n  translateY,\n}) {\n  const values = [];\n\n  if (isNumber(translateX) && translateX !== 0) {\n    values.push(`translateX(${translateX}px)`);\n  }\n\n  if (isNumber(translateY) && translateY !== 0) {\n    values.push(`translateY(${translateY}px)`);\n  }\n\n  // Rotate should come first before scale to match orientation transform\n  if (isNumber(rotate) && rotate !== 0) {\n    values.push(`rotate(${rotate}deg)`);\n  }\n\n  if (isNumber(scaleX) && scaleX !== 1) {\n    values.push(`scaleX(${scaleX})`);\n  }\n\n  if (isNumber(scaleY) && scaleY !== 1) {\n    values.push(`scaleY(${scaleY})`);\n  }\n\n  return values.length ? values.join(' ') : 'none';\n}\n\nconst { navigator } = global;\nconst IS_SAFARI_OR_UIWEBVIEW = navigator && /(Macintosh|iPhone|iPod|iPad).*AppleWebKit/i.test(navigator.userAgent);\n\n/**\n * Get an image's natural sizes.\n * @param {string} image - The target image.\n * @param {Function} callback - The callback function.\n */\nexport function getImageNaturalSizes(image, callback) {\n  // Modern browsers (except Safari)\n  if (image.naturalWidth && !IS_SAFARI_OR_UIWEBVIEW) {\n    callback(image.naturalWidth, image.naturalHeight);\n    return;\n  }\n\n  const newImage = document.createElement('img');\n\n  newImage.onload = () => {\n    callback(newImage.width, newImage.height);\n  };\n\n  newImage.src = image.src;\n}\n\n/**\n * Get the max ratio of a group of pointers.\n * @param {string} pointers - The target pointers.\n * @returns {number} The result ratio.\n */\nexport function getMaxZoomRatio(pointers) {\n  const pointers2 = $.extend({}, pointers);\n  const ratios = [];\n\n  $.each(pointers, (pointerId, pointer) => {\n    delete pointers2[pointerId];\n\n    $.each(pointers2, (pointerId2, pointer2) => {\n      const x1 = Math.abs(pointer.startX - pointer2.startX);\n      const y1 = Math.abs(pointer.startY - pointer2.startY);\n      const x2 = Math.abs(pointer.endX - pointer2.endX);\n      const y2 = Math.abs(pointer.endY - pointer2.endY);\n      const z1 = Math.sqrt((x1 * x1) + (y1 * y1));\n      const z2 = Math.sqrt((x2 * x2) + (y2 * y2));\n      const ratio = (z2 - z1) / z1;\n\n      ratios.push(ratio);\n    });\n  });\n\n  ratios.sort((a, b) => Math.abs(a) < Math.abs(b));\n\n  return ratios[0];\n}\n\n/**\n * Get a pointer from an event object.\n * @param {Object} event - The target event object.\n * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n * @returns {Object} The result pointer contains start and/or end point coordinates.\n */\nexport function getPointer({ pageX, pageY }, endOnly) {\n  const end = {\n    endX: pageX,\n    endY: pageY,\n  };\n\n  if (endOnly) {\n    return end;\n  }\n\n  return $.extend({\n    startX: pageX,\n    startY: pageY,\n  }, end);\n}\n\n/**\n * Get the center point coordinate of a group of pointers.\n * @param {Object} pointers - The target pointers.\n * @returns {Object} The center point coordinate.\n */\nexport function getPointersCenter(pointers) {\n  let pageX = 0;\n  let pageY = 0;\n  let count = 0;\n\n  $.each(pointers, (pointerId, { startX, startY }) => {\n    pageX += startX;\n    pageY += startY;\n    count += 1;\n  });\n\n  pageX /= count;\n  pageY /= count;\n\n  return {\n    pageX,\n    pageY,\n  };\n}\n\n/**\n * Check if the given value is a finite number.\n */\nexport const isFinite = Number.isFinite || global.isFinite;\n\n/**\n * Get the max sizes in a rectangle under the given aspect ratio.\n * @param {Object} data - The original sizes.\n * @returns {Object} The result sizes.\n */\nexport function getContainSizes({\n  aspectRatio,\n  height,\n  width,\n}) {\n  const isValidNumber = value => isFinite(value) && value > 0;\n\n  if (isValidNumber(width) && isValidNumber(height)) {\n    if (height * aspectRatio > width) {\n      height = width / aspectRatio;\n    } else {\n      width = height * aspectRatio;\n    }\n  } else if (isValidNumber(width)) {\n    height = width / aspectRatio;\n  } else if (isValidNumber(height)) {\n    width = height * aspectRatio;\n  }\n\n  return {\n    width,\n    height,\n  };\n}\n\n/**\n * Get the new sizes of a rectangle after rotated.\n * @param {Object} data - The original sizes.\n * @returns {Object} The result sizes.\n */\nexport function getRotatedSizes({ width, height, degree }) {\n  degree = Math.abs(degree);\n\n  if (degree % 180 === 90) {\n    return {\n      width: height,\n      height: width,\n    };\n  }\n\n  const arc = ((degree % 90) * Math.PI) / 180;\n  const sinArc = Math.sin(arc);\n  const cosArc = Math.cos(arc);\n\n  return {\n    width: (width * cosArc) + (height * sinArc),\n    height: (width * sinArc) + (height * cosArc),\n  };\n}\n\n/**\n * Get a canvas which drew the given image.\n * @param {HTMLImageElement} image - The image for drawing.\n * @param {Object} imageData - The image data.\n * @param {Object} canvasData - The canvas data.\n * @param {Object} options - The options.\n * @returns {HTMLCanvasElement} The result canvas.\n */\nexport function getSourceCanvas(\n  image,\n  {\n    naturalWidth: imageNaturalWidth,\n    naturalHeight: imageNaturalHeight,\n    rotate,\n    scaleX,\n    scaleY,\n  },\n  {\n    aspectRatio,\n    naturalWidth,\n    naturalHeight,\n  },\n  {\n    fillColor = 'transparent',\n    imageSmoothingEnabled = true,\n    imageSmoothingQuality = 'low',\n    maxWidth = Infinity,\n    maxHeight = Infinity,\n    minWidth = 0,\n    minHeight = 0,\n  },\n) {\n  const maxSizes = getContainSizes({\n    aspectRatio,\n    width: maxWidth,\n    height: maxHeight,\n  });\n  const minSizes = getContainSizes({\n    aspectRatio,\n    width: minWidth,\n    height: minHeight,\n  });\n  const width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n  const height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight));\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  const params = [\n    -imageNaturalWidth / 2,\n    -imageNaturalHeight / 2,\n    imageNaturalWidth,\n    imageNaturalHeight,\n  ];\n\n  canvas.width = normalizeDecimalNumber(width);\n  canvas.height = normalizeDecimalNumber(height);\n  context.fillStyle = fillColor;\n  context.fillRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n  context.rotate((rotate * Math.PI) / 180);\n  context.scale(scaleX, scaleY);\n  context.imageSmoothingEnabled = !!imageSmoothingEnabled;\n  context.imageSmoothingQuality = imageSmoothingQuality;\n  context.drawImage(image, ...$.map(params, param => Math.floor(normalizeDecimalNumber(param))));\n  context.restore();\n  return canvas;\n}\n\nconst { fromCharCode } = String;\n\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\nexport function getStringFromCharCode(dataView, start, length) {\n  let str = '';\n  let i;\n\n  length += start;\n\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\n\nconst REGEXP_DATA_URL_HEAD = /^data:.*,/;\n\n/**\n * Transform Data URL to array buffer.\n * @param {string} dataURL - The Data URL to transform.\n * @returns {ArrayBuffer} The result array buffer.\n */\nexport function dataURLToArrayBuffer(dataURL) {\n  const base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n  const binary = atob(base64);\n  const arrayBuffer = new ArrayBuffer(binary.length);\n  const uint8 = new Uint8Array(arrayBuffer);\n\n  $.each(uint8, (i) => {\n    uint8[i] = binary.charCodeAt(i);\n  });\n\n  return arrayBuffer;\n}\n\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\nexport function arrayBufferToDataURL(arrayBuffer, mimeType) {\n  const uint8 = new Uint8Array(arrayBuffer);\n  let data = '';\n\n  // TypedArray.prototype.forEach is not supported in some browsers.\n  $.each(uint8, (i, value) => {\n    data += fromCharCode(value);\n  });\n\n  return `data:${mimeType};base64,${btoa(data)}`;\n}\n\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\nexport function getOrientation(arrayBuffer) {\n  const dataView = new DataView(arrayBuffer);\n  let orientation;\n  let littleEndian;\n  let app1Start;\n  let ifdStart;\n\n  // Only handle JPEG image (start by 0xFFD8)\n  if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n    const length = dataView.byteLength;\n    let offset = 2;\n\n    while (offset < length) {\n      if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n        app1Start = offset;\n        break;\n      }\n\n      offset += 1;\n    }\n  }\n\n  if (app1Start) {\n    const exifIDCode = app1Start + 4;\n    const tiffOffset = app1Start + 10;\n\n    if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n      const endianness = dataView.getUint16(tiffOffset);\n\n      littleEndian = endianness === 0x4949;\n\n      if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n        if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n          const firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n          if (firstIFDOffset >= 0x00000008) {\n            ifdStart = tiffOffset + firstIFDOffset;\n          }\n        }\n      }\n    }\n  }\n\n  if (ifdStart) {\n    const length = dataView.getUint16(ifdStart, littleEndian);\n    let offset;\n    let i;\n\n    for (i = 0; i < length; i += 1) {\n      offset = ifdStart + (i * 12) + 2;\n\n      if (dataView.getUint16(offset, littleEndian) === 0x0112 /* Orientation */) {\n        // 8 is the offset of the current tag's value\n        offset += 8;\n\n        // Get the original orientation value\n        orientation = dataView.getUint16(offset, littleEndian);\n\n        // Override the orientation with its default value\n        dataView.setUint16(offset, 1, littleEndian);\n        break;\n      }\n    }\n  }\n\n  return orientation;\n}\n\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\nexport function parseOrientation(orientation) {\n  let rotate = 0;\n  let scaleX = 1;\n  let scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n\n    // Rotate left 180°\n    case 3:\n      rotate = -180;\n      break;\n\n    // Flip vertical\n    case 4:\n      scaleY = -1;\n      break;\n\n    // Flip vertical and rotate right 90°\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n\n    // Rotate right 90°\n    case 6:\n      rotate = 90;\n      break;\n\n    // Flip horizontal and rotate right 90°\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n\n    // Rotate left 90°\n    case 8:\n      rotate = -90;\n      break;\n\n    default:\n  }\n\n  return {\n    rotate,\n    scaleX,\n    scaleY,\n  };\n}\n","import $ from 'jquery';\nimport {\n  ACTION_ALL,\n  ACTION_MOVE,\n  CLASS_HIDDEN,\n  DATA_ACTION,\n  EVENT_CROP,\n} from './constants';\nimport {\n  getContainSizes,\n  getRotatedSizes,\n  getTransformValues,\n} from './utilities';\n\nexport default {\n  render() {\n    this.initContainer();\n    this.initCanvas();\n    this.initCropBox();\n    this.renderCanvas();\n\n    if (this.cropped) {\n      this.renderCropBox();\n    }\n  },\n\n  initContainer() {\n    const {\n      $element,\n      options,\n      $container,\n      $cropper,\n    } = this;\n\n    $cropper.addClass(CLASS_HIDDEN);\n    $element.removeClass(CLASS_HIDDEN);\n\n    $cropper.css((this.container = {\n      width: Math.max(\n        $container.width(),\n        Number(options.minContainerWidth) || 200,\n      ),\n      height: Math.max(\n        $container.height(),\n        Number(options.minContainerHeight) || 100,\n      ),\n    }));\n\n    $element.addClass(CLASS_HIDDEN);\n    $cropper.removeClass(CLASS_HIDDEN);\n  },\n\n  // Canvas (image wrapper)\n  initCanvas() {\n    const { container, image } = this;\n    const { viewMode } = this.options;\n    const rotated = Math.abs(image.rotate) % 180 === 90;\n    const naturalWidth = rotated ? image.naturalHeight : image.naturalWidth;\n    const naturalHeight = rotated ? image.naturalWidth : image.naturalHeight;\n    const aspectRatio = naturalWidth / naturalHeight;\n    let canvasWidth = container.width;\n    let canvasHeight = container.height;\n\n    if (container.height * aspectRatio > container.width) {\n      if (viewMode === 3) {\n        canvasWidth = container.height * aspectRatio;\n      } else {\n        canvasHeight = container.width / aspectRatio;\n      }\n    } else if (viewMode === 3) {\n      canvasHeight = container.width / aspectRatio;\n    } else {\n      canvasWidth = container.height * aspectRatio;\n    }\n\n    const canvas = {\n      aspectRatio,\n      naturalWidth,\n      naturalHeight,\n      width: canvasWidth,\n      height: canvasHeight,\n    };\n\n    canvas.left = (container.width - canvasWidth) / 2;\n    canvas.top = (container.height - canvasHeight) / 2;\n    canvas.oldLeft = canvas.left;\n    canvas.oldTop = canvas.top;\n\n    this.canvas = canvas;\n    this.limited = (viewMode === 1 || viewMode === 2);\n    this.limitCanvas(true, true);\n    this.initialImage = $.extend({}, image);\n    this.initialCanvas = $.extend({}, canvas);\n  },\n\n  limitCanvas(isSizeLimited, isPositionLimited) {\n    const {\n      options,\n      container,\n      canvas,\n      cropBox,\n    } = this;\n    const { viewMode } = options;\n    const { aspectRatio } = canvas;\n    const cropped = this.cropped && cropBox;\n\n    if (isSizeLimited) {\n      let minCanvasWidth = Number(options.minCanvasWidth) || 0;\n      let minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n      if (viewMode > 0) {\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, container.width);\n          minCanvasHeight = Math.max(minCanvasHeight, container.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (minCanvasWidth) {\n          minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBox.width : 0);\n        } else if (minCanvasHeight) {\n          minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBox.height : 0);\n        } else if (cropped) {\n          minCanvasWidth = cropBox.width;\n          minCanvasHeight = cropBox.height;\n\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      }\n\n      ({ width: minCanvasWidth, height: minCanvasHeight } = getContainSizes({\n        aspectRatio,\n        width: minCanvasWidth,\n        height: minCanvasHeight,\n      }));\n\n      canvas.minWidth = minCanvasWidth;\n      canvas.minHeight = minCanvasHeight;\n      canvas.maxWidth = Infinity;\n      canvas.maxHeight = Infinity;\n    }\n\n    if (isPositionLimited) {\n      if (viewMode > 0) {\n        const newCanvasLeft = container.width - canvas.width;\n        const newCanvasTop = container.height - canvas.height;\n\n        canvas.minLeft = Math.min(0, newCanvasLeft);\n        canvas.minTop = Math.min(0, newCanvasTop);\n        canvas.maxLeft = Math.max(0, newCanvasLeft);\n        canvas.maxTop = Math.max(0, newCanvasTop);\n\n        if (cropped && this.limited) {\n          canvas.minLeft = Math.min(\n            cropBox.left,\n            (cropBox.left + cropBox.width) - canvas.width,\n          );\n          canvas.minTop = Math.min(\n            cropBox.top,\n            (cropBox.top + cropBox.height) - canvas.height,\n          );\n          canvas.maxLeft = cropBox.left;\n          canvas.maxTop = cropBox.top;\n\n          if (viewMode === 2) {\n            if (canvas.width >= container.width) {\n              canvas.minLeft = Math.min(0, newCanvasLeft);\n              canvas.maxLeft = Math.max(0, newCanvasLeft);\n            }\n\n            if (canvas.height >= container.height) {\n              canvas.minTop = Math.min(0, newCanvasTop);\n              canvas.maxTop = Math.max(0, newCanvasTop);\n            }\n          }\n        }\n      } else {\n        canvas.minLeft = -canvas.width;\n        canvas.minTop = -canvas.height;\n        canvas.maxLeft = container.width;\n        canvas.maxTop = container.height;\n      }\n    }\n  },\n\n  renderCanvas(changed, transformed) {\n    const { canvas, image } = this;\n\n    if (transformed) {\n      const { width: naturalWidth, height: naturalHeight } = getRotatedSizes({\n        width: image.naturalWidth * Math.abs(image.scaleX),\n        height: image.naturalHeight * Math.abs(image.scaleY),\n        degree: image.rotate,\n      });\n      const width = canvas.width * (naturalWidth / canvas.naturalWidth);\n      const height = canvas.height * (naturalHeight / canvas.naturalHeight);\n\n      canvas.left -= (width - canvas.width) / 2;\n      canvas.top -= (height - canvas.height) / 2;\n      canvas.width = width;\n      canvas.height = height;\n      canvas.aspectRatio = naturalWidth / naturalHeight;\n      canvas.naturalWidth = naturalWidth;\n      canvas.naturalHeight = naturalHeight;\n      this.limitCanvas(true, false);\n    }\n\n    if (canvas.width > canvas.maxWidth || canvas.width < canvas.minWidth) {\n      canvas.left = canvas.oldLeft;\n    }\n\n    if (canvas.height > canvas.maxHeight || canvas.height < canvas.minHeight) {\n      canvas.top = canvas.oldTop;\n    }\n\n    canvas.width = Math.min(Math.max(canvas.width, canvas.minWidth), canvas.maxWidth);\n    canvas.height = Math.min(Math.max(canvas.height, canvas.minHeight), canvas.maxHeight);\n\n    this.limitCanvas(false, true);\n\n    canvas.left = Math.min(Math.max(canvas.left, canvas.minLeft), canvas.maxLeft);\n    canvas.top = Math.min(Math.max(canvas.top, canvas.minTop), canvas.maxTop);\n    canvas.oldLeft = canvas.left;\n    canvas.oldTop = canvas.top;\n\n    this.$canvas.css({\n      width: canvas.width,\n      height: canvas.height,\n      transform: getTransformValues({\n        translateX: canvas.left,\n        translateY: canvas.top,\n      }),\n    });\n\n    this.renderImage(changed);\n\n    if (this.cropped && this.limited) {\n      this.limitCropBox(true, true);\n    }\n  },\n\n  renderImage(changed) {\n    const { canvas, image } = this;\n    const width = image.naturalWidth * (canvas.width / canvas.naturalWidth);\n    const height = image.naturalHeight * (canvas.height / canvas.naturalHeight);\n\n    $.extend(image, {\n      width,\n      height,\n      left: (canvas.width - width) / 2,\n      top: (canvas.height - height) / 2,\n    });\n\n    this.$clone.css({\n      width: image.width,\n      height: image.height,\n      transform: getTransformValues($.extend({\n        translateX: image.left,\n        translateY: image.top,\n      }, image)),\n    });\n\n    if (changed) {\n      this.output();\n    }\n  },\n\n  initCropBox() {\n    const { options, canvas } = this;\n    const { aspectRatio } = options;\n    const autoCropArea = Number(options.autoCropArea) || 0.8;\n    const cropBox = {\n      width: canvas.width,\n      height: canvas.height,\n    };\n\n    if (aspectRatio) {\n      if (canvas.height * aspectRatio > canvas.width) {\n        cropBox.height = cropBox.width / aspectRatio;\n      } else {\n        cropBox.width = cropBox.height * aspectRatio;\n      }\n    }\n\n    this.cropBox = cropBox;\n    this.limitCropBox(true, true);\n\n    // Initialize auto crop area\n    cropBox.width = Math.min(Math.max(cropBox.width, cropBox.minWidth), cropBox.maxWidth);\n    cropBox.height = Math.min(Math.max(cropBox.height, cropBox.minHeight), cropBox.maxHeight);\n\n    // The width of auto crop area must large than \"minWidth\", and the height too. (#164)\n    cropBox.width = Math.max(cropBox.minWidth, cropBox.width * autoCropArea);\n    cropBox.height = Math.max(cropBox.minHeight, cropBox.height * autoCropArea);\n    cropBox.left = canvas.left + ((canvas.width - cropBox.width) / 2);\n    cropBox.top = canvas.top + ((canvas.height - cropBox.height) / 2);\n    cropBox.oldLeft = cropBox.left;\n    cropBox.oldTop = cropBox.top;\n\n    this.initialCropBox = $.extend({}, cropBox);\n  },\n\n  limitCropBox(isSizeLimited, isPositionLimited) {\n    const {\n      options,\n      container,\n      canvas,\n      cropBox,\n      limited,\n    } = this;\n    const { aspectRatio } = options;\n\n    if (isSizeLimited) {\n      let minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n      let minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n      let maxCropBoxWidth = Math.min(container.width, limited ? canvas.width : container.width);\n      let maxCropBoxHeight = Math.min(container.height, limited ? canvas.height : container.height);\n\n      // The min/maxCropBoxWidth/Height must be less than container's width/Height\n      minCropBoxWidth = Math.min(minCropBoxWidth, container.width);\n      minCropBoxHeight = Math.min(minCropBoxHeight, container.height);\n\n      if (aspectRatio) {\n        if (minCropBoxWidth && minCropBoxHeight) {\n          if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n        } else if (minCropBoxWidth) {\n          minCropBoxHeight = minCropBoxWidth / aspectRatio;\n        } else if (minCropBoxHeight) {\n          minCropBoxWidth = minCropBoxHeight * aspectRatio;\n        }\n\n        if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n          maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n        } else {\n          maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n        }\n      }\n\n      // The minWidth/Height must be less than maxWidth/Height\n      cropBox.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n      cropBox.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n      cropBox.maxWidth = maxCropBoxWidth;\n      cropBox.maxHeight = maxCropBoxHeight;\n    }\n\n    if (isPositionLimited) {\n      if (limited) {\n        cropBox.minLeft = Math.max(0, canvas.left);\n        cropBox.minTop = Math.max(0, canvas.top);\n        cropBox.maxLeft = Math.min(container.width, canvas.left + canvas.width) - cropBox.width;\n        cropBox.maxTop = Math.min(container.height, canvas.top + canvas.height) - cropBox.height;\n      } else {\n        cropBox.minLeft = 0;\n        cropBox.minTop = 0;\n        cropBox.maxLeft = container.width - cropBox.width;\n        cropBox.maxTop = container.height - cropBox.height;\n      }\n    }\n  },\n\n  renderCropBox() {\n    const { options, container, cropBox } = this;\n\n    if (cropBox.width > cropBox.maxWidth || cropBox.width < cropBox.minWidth) {\n      cropBox.left = cropBox.oldLeft;\n    }\n\n    if (cropBox.height > cropBox.maxHeight || cropBox.height < cropBox.minHeight) {\n      cropBox.top = cropBox.oldTop;\n    }\n\n    cropBox.width = Math.min(Math.max(cropBox.width, cropBox.minWidth), cropBox.maxWidth);\n    cropBox.height = Math.min(Math.max(cropBox.height, cropBox.minHeight), cropBox.maxHeight);\n\n    this.limitCropBox(false, true);\n\n    cropBox.left = Math.min(\n      Math.max(cropBox.left, cropBox.minLeft),\n      cropBox.maxLeft,\n    );\n    cropBox.top = Math.min(\n      Math.max(cropBox.top, cropBox.minTop),\n      cropBox.maxTop,\n    );\n    cropBox.oldLeft = cropBox.left;\n    cropBox.oldTop = cropBox.top;\n\n    if (options.movable && options.cropBoxMovable) {\n      // Turn to move the canvas when the crop box is equal to the container\n      this.$face.data(DATA_ACTION, (cropBox.width >= container.width &&\n        cropBox.height >= container.height) ? ACTION_MOVE : ACTION_ALL);\n    }\n\n    this.$cropBox.css({\n      width: cropBox.width,\n      height: cropBox.height,\n      transform: getTransformValues({\n        translateX: cropBox.left,\n        translateY: cropBox.top,\n      }),\n    });\n\n    if (this.cropped && this.limited) {\n      this.limitCanvas(true, true);\n    }\n\n    if (!this.disabled) {\n      this.output();\n    }\n  },\n\n  output() {\n    this.preview();\n\n    if (this.completed) {\n      this.trigger(EVENT_CROP, this.getData());\n    }\n  },\n};\n","import $ from 'jquery';\nimport {\n  DATA_PREVIEW,\n} from './constants';\nimport {\n  getTransformValues,\n} from './utilities';\n\nexport default {\n  initPreview() {\n    const { crossOrigin } = this;\n    const url = crossOrigin ? this.crossOriginUrl : this.url;\n    const image = document.createElement('img');\n\n    if (crossOrigin) {\n      image.crossOrigin = crossOrigin;\n    }\n\n    image.src = url;\n\n    const $clone2 = $(image);\n\n    this.$preview = $(this.options.preview);\n    this.$clone2 = $clone2;\n    this.$viewBox.html($clone2);\n    this.$preview.each((i, element) => {\n      const $element = $(element);\n      const img = document.createElement('img');\n\n      // Save the original size for recover\n      $element.data(DATA_PREVIEW, {\n        width: $element.width(),\n        height: $element.height(),\n        html: $element.html(),\n      });\n\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n\n      /**\n       * Override img element styles\n       * Add `display:block` to avoid margin top issue\n       * Add `height:auto` to override `height` attribute on IE8\n       * (Occur only when margin-top <= -height)\n       */\n      img.style.cssText = (\n        'display:block;' +\n        'width:100%;' +\n        'height:auto;' +\n        'min-width:0!important;' +\n        'min-height:0!important;' +\n        'max-width:none!important;' +\n        'max-height:none!important;' +\n        'image-orientation:0deg!important;\"'\n      );\n\n      $element.html(img);\n    });\n  },\n\n  resetPreview() {\n    this.$preview.each((i, element) => {\n      const $element = $(element);\n      const data = $element.data(DATA_PREVIEW);\n\n      $element.css({\n        width: data.width,\n        height: data.height,\n      }).html(data.html).removeData(DATA_PREVIEW);\n    });\n  },\n\n  preview() {\n    const { image, canvas, cropBox } = this;\n    const { width: cropBoxWidth, height: cropBoxHeight } = cropBox;\n    const { width, height } = image;\n    const left = cropBox.left - canvas.left - image.left;\n    const top = cropBox.top - canvas.top - image.top;\n\n    if (!this.cropped || this.disabled) {\n      return;\n    }\n\n    this.$clone2.css({\n      width,\n      height,\n      transform: getTransformValues($.extend({\n        translateX: -left,\n        translateY: -top,\n      }, image)),\n    });\n\n    this.$preview.each((i, element) => {\n      const $element = $(element);\n      const data = $element.data(DATA_PREVIEW);\n      const originalWidth = data.width;\n      const originalHeight = data.height;\n      let newWidth = originalWidth;\n      let newHeight = originalHeight;\n      let ratio = 1;\n\n      if (cropBoxWidth) {\n        ratio = originalWidth / cropBoxWidth;\n        newHeight = cropBoxHeight * ratio;\n      }\n\n      if (cropBoxHeight && newHeight > originalHeight) {\n        ratio = originalHeight / cropBoxHeight;\n        newWidth = cropBoxWidth * ratio;\n        newHeight = originalHeight;\n      }\n\n      $element.css({\n        width: newWidth,\n        height: newHeight,\n      }).find('img').css({\n        width: width * ratio,\n        height: height * ratio,\n        transform: getTransformValues($.extend({\n          translateX: -left * ratio,\n          translateY: -top * ratio,\n        }, image)),\n      });\n    });\n  },\n};\n","import $ from 'jquery';\nimport global from './global';\nimport {\n  EVENT_CROP,\n  EVENT_CROP_END,\n  EVENT_CROP_MOVE,\n  EVENT_CROP_START,\n  EVENT_DBLCLICK,\n  EVENT_POINTER_DOWN,\n  EVENT_POINTER_MOVE,\n  EVENT_POINTER_UP,\n  EVENT_RESIZE,\n  EVENT_WHEEL,\n  EVENT_ZOOM,\n} from './constants';\nimport {\n  proxy,\n} from './utilities';\n\nexport default {\n  bind() {\n    const { $element, options, $cropper } = this;\n\n    if ($.isFunction(options.cropstart)) {\n      $element.on(EVENT_CROP_START, options.cropstart);\n    }\n\n    if ($.isFunction(options.cropmove)) {\n      $element.on(EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if ($.isFunction(options.cropend)) {\n      $element.on(EVENT_CROP_END, options.cropend);\n    }\n\n    if ($.isFunction(options.crop)) {\n      $element.on(EVENT_CROP, options.crop);\n    }\n\n    if ($.isFunction(options.zoom)) {\n      $element.on(EVENT_ZOOM, options.zoom);\n    }\n\n    $cropper.on(EVENT_POINTER_DOWN, proxy(this.cropStart, this));\n\n    if (options.zoomable && options.zoomOnWheel) {\n      $cropper.on(EVENT_WHEEL, proxy(this.wheel, this));\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      $cropper.on(EVENT_DBLCLICK, proxy(this.dblclick, this));\n    }\n\n    $(document)\n      .on(EVENT_POINTER_MOVE, (this.onCropMove = proxy(this.cropMove, this)))\n      .on(EVENT_POINTER_UP, (this.onCropEnd = proxy(this.cropEnd, this)));\n\n    if (options.responsive) {\n      $(global).on(EVENT_RESIZE, (this.onResize = proxy(this.resize, this)));\n    }\n  },\n\n  unbind() {\n    const { $element, options, $cropper } = this;\n\n    if ($.isFunction(options.cropstart)) {\n      $element.off(EVENT_CROP_START, options.cropstart);\n    }\n\n    if ($.isFunction(options.cropmove)) {\n      $element.off(EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if ($.isFunction(options.cropend)) {\n      $element.off(EVENT_CROP_END, options.cropend);\n    }\n\n    if ($.isFunction(options.crop)) {\n      $element.off(EVENT_CROP, options.crop);\n    }\n\n    if ($.isFunction(options.zoom)) {\n      $element.off(EVENT_ZOOM, options.zoom);\n    }\n\n    $cropper.off(EVENT_POINTER_DOWN, this.cropStart);\n\n    if (options.zoomable && options.zoomOnWheel) {\n      $cropper.off(EVENT_WHEEL, this.wheel);\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      $cropper.off(EVENT_DBLCLICK, this.dblclick);\n    }\n\n    $(document)\n      .off(EVENT_POINTER_MOVE, this.onCropMove)\n      .off(EVENT_POINTER_UP, this.onCropEnd);\n\n    if (options.responsive) {\n      $(global).off(EVENT_RESIZE, this.onResize);\n    }\n  },\n};\n","import $ from 'jquery';\nimport {\n  ACTION_CROP,\n  ACTION_ZOOM,\n  CLASS_CROP,\n  CLASS_MODAL,\n  DATA_ACTION,\n  DRAG_MODE_CROP,\n  DRAG_MODE_MOVE,\n  DRAG_MODE_NONE,\n  EVENT_CROP_END,\n  EVENT_CROP_MOVE,\n  EVENT_CROP_START,\n  REGEXP_ACTIONS,\n} from './constants';\nimport {\n  getPointer,\n  objectKeys,\n} from './utilities';\n\nexport default {\n  resize() {\n    const { options, $container, container } = this;\n    const minContainerWidth = Number(options.minContainerWidth) || 200;\n    const minContainerHeight = Number(options.minContainerHeight) || 100;\n\n    if (this.disabled || container.width <= minContainerWidth ||\n      container.height <= minContainerHeight) {\n      return;\n    }\n\n    const ratio = $container.width() / container.width;\n\n    // Resize when width changed or height changed\n    if (ratio !== 1 || $container.height() !== container.height) {\n      let canvasData;\n      let cropBoxData;\n\n      if (options.restore) {\n        canvasData = this.getCanvasData();\n        cropBoxData = this.getCropBoxData();\n      }\n\n      this.render();\n\n      if (options.restore) {\n        this.setCanvasData($.each(canvasData, (i, n) => {\n          canvasData[i] = n * ratio;\n        }));\n        this.setCropBoxData($.each(cropBoxData, (i, n) => {\n          cropBoxData[i] = n * ratio;\n        }));\n      }\n    }\n  },\n\n  dblclick() {\n    if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n      return;\n    }\n\n    this.setDragMode(this.$dragBox.hasClass(CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n  },\n\n  wheel(event) {\n    const e = event.originalEvent || event;\n    const ratio = Number(this.options.wheelZoomRatio) || 0.1;\n\n    if (this.disabled) {\n      return;\n    }\n\n    event.preventDefault();\n\n    // Limit wheel speed to prevent zoom too fast\n    if (this.wheeling) {\n      return;\n    }\n\n    this.wheeling = true;\n\n    setTimeout(() => {\n      this.wheeling = false;\n    }, 50);\n\n    let delta = 1;\n\n    if (e.deltaY) {\n      delta = e.deltaY > 0 ? 1 : -1;\n    } else if (e.wheelDelta) {\n      delta = -e.wheelDelta / 120;\n    } else if (e.detail) {\n      delta = e.detail > 0 ? 1 : -1;\n    }\n\n    this.zoom(-delta * ratio, event);\n  },\n\n  cropStart(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    const { options, pointers } = this;\n    const { originalEvent } = e;\n    let action;\n\n    if (originalEvent && originalEvent.changedTouches) {\n      // Handle touch event\n      $.each(originalEvent.changedTouches, (i, touch) => {\n        pointers[touch.identifier] = getPointer(touch);\n      });\n    } else {\n      // Handle mouse event and pointer event\n      pointers[(originalEvent && originalEvent.pointerId) || 0] = getPointer(originalEvent || e);\n    }\n\n    if (objectKeys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n      action = ACTION_ZOOM;\n    } else {\n      action = $(e.target).data(DATA_ACTION);\n    }\n\n    if (!REGEXP_ACTIONS.test(action)) {\n      return;\n    }\n\n    if (this.trigger(EVENT_CROP_START, {\n      originalEvent,\n      action,\n    }).isDefaultPrevented()) {\n      return;\n    }\n\n    e.preventDefault();\n\n    this.action = action;\n    this.cropping = false;\n\n    if (action === ACTION_CROP) {\n      this.cropping = true;\n      this.$dragBox.addClass(CLASS_MODAL);\n    }\n  },\n\n  cropMove(e) {\n    const { action } = this;\n\n    if (this.disabled || !action) {\n      return;\n    }\n\n    const { pointers } = this;\n    const { originalEvent } = e;\n\n    e.preventDefault();\n\n    if (this.trigger(EVENT_CROP_MOVE, {\n      originalEvent,\n      action,\n    }).isDefaultPrevented()) {\n      return;\n    }\n\n    if (originalEvent && originalEvent.changedTouches) {\n      $.each(originalEvent.changedTouches, (i, touch) => {\n        $.extend(pointers[touch.identifier], getPointer(touch, true));\n      });\n    } else {\n      $.extend(\n        pointers[(originalEvent && originalEvent.pointerId) || 0],\n        getPointer(originalEvent || e, true),\n      );\n    }\n\n    this.change(e);\n  },\n\n  cropEnd(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    const { action } = this;\n    const { pointers } = this;\n    const { originalEvent } = e;\n\n    if (originalEvent && originalEvent.changedTouches) {\n      $.each(originalEvent.changedTouches, (i, touch) => {\n        delete pointers[touch.identifier];\n      });\n    } else {\n      delete pointers[(originalEvent && originalEvent.pointerId) || 0];\n    }\n\n    if (!action) {\n      return;\n    }\n\n    e.preventDefault();\n\n    if (!objectKeys(pointers).length) {\n      this.action = '';\n    }\n\n    if (this.cropping) {\n      this.cropping = false;\n      this.$dragBox.toggleClass(CLASS_MODAL, this.cropped && this.options.modal);\n    }\n\n    this.trigger(EVENT_CROP_END, {\n      originalEvent,\n      action,\n    });\n  },\n};\n","import $ from 'jquery';\nimport {\n  ACTION_ALL,\n  ACTION_CROP,\n  ACTION_EAST,\n  ACTION_MOVE,\n  ACTION_NORTH,\n  ACTION_NORTH_EAST,\n  ACTION_NORTH_WEST,\n  ACTION_SOUTH,\n  ACTION_SOUTH_EAST,\n  ACTION_SOUTH_WEST,\n  ACTION_WEST,\n  ACTION_ZOOM,\n  CLASS_HIDDEN,\n} from './constants';\nimport {\n  getMaxZoomRatio,\n  objectKeys,\n} from './utilities';\n\nexport default {\n  change(e) {\n    const {\n      options,\n      pointers,\n      container,\n      canvas,\n      cropBox,\n    } = this;\n    let { action } = this;\n    let { aspectRatio } = options;\n    let {\n      left,\n      top,\n      width,\n      height,\n    } = cropBox;\n    const right = left + width;\n    const bottom = top + height;\n    let minLeft = 0;\n    let minTop = 0;\n    let maxWidth = container.width;\n    let maxHeight = container.height;\n    let renderable = true;\n    let offset;\n\n    // Locking aspect ratio in \"free mode\" by holding shift key (#259)\n    if (!aspectRatio && e.shiftKey) {\n      aspectRatio = width && height ? width / height : 1;\n    }\n\n    if (this.limited) {\n      ({ minLeft, minTop } = cropBox);\n      maxWidth = minLeft + Math.min(\n        container.width,\n        canvas.width,\n        canvas.left + canvas.width,\n      );\n      maxHeight = minTop + Math.min(\n        container.height,\n        canvas.height,\n        canvas.top + canvas.height,\n      );\n    }\n\n    const pointer = pointers[objectKeys(pointers)[0]];\n    const range = {\n      x: pointer.endX - pointer.startX,\n      y: pointer.endY - pointer.startY,\n    };\n    const check = (side) => {\n      switch (side) {\n        case ACTION_EAST:\n          if (right + range.x > maxWidth) {\n            range.x = maxWidth - right;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (left + range.x < minLeft) {\n            range.x = minLeft - left;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (top + range.y < minTop) {\n            range.y = minTop - top;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (bottom + range.y > maxHeight) {\n            range.y = maxHeight - bottom;\n          }\n\n          break;\n\n        default:\n      }\n    };\n\n    switch (action) {\n      // Move crop box\n      case ACTION_ALL:\n        left += range.x;\n        top += range.y;\n        break;\n\n      // Resize crop box\n      case ACTION_EAST:\n        if (range.x >= 0 && (right >= maxWidth || (aspectRatio &&\n          (top <= minTop || bottom >= maxHeight)))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_EAST);\n        width += range.x;\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top -= (range.x / aspectRatio) / 2;\n        }\n\n        if (width < 0) {\n          action = ACTION_WEST;\n          width = 0;\n        }\n\n        break;\n\n      case ACTION_NORTH:\n        if (range.y <= 0 && (top <= minTop || (aspectRatio &&\n          (left <= minLeft || right >= maxWidth)))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_NORTH);\n        height -= range.y;\n        top += range.y;\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += (range.y * aspectRatio) / 2;\n        }\n\n        if (height < 0) {\n          action = ACTION_SOUTH;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_WEST:\n        if (range.x <= 0 && (left <= minLeft || (aspectRatio &&\n          (top <= minTop || bottom >= maxHeight)))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_WEST);\n        width -= range.x;\n        left += range.x;\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += (range.x / aspectRatio) / 2;\n        }\n\n        if (width < 0) {\n          action = ACTION_EAST;\n          width = 0;\n        }\n\n        break;\n\n      case ACTION_SOUTH:\n        if (range.y >= 0 && (bottom >= maxHeight || (aspectRatio &&\n          (left <= minLeft || right >= maxWidth)))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_SOUTH);\n        height += range.y;\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left -= (range.y * aspectRatio) / 2;\n        }\n\n        if (height < 0) {\n          action = ACTION_NORTH;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_NORTH_EAST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_NORTH_WEST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_NORTH_WEST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n          left += range.y * aspectRatio;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_NORTH_EAST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_SOUTH_WEST:\n        if (aspectRatio) {\n          if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_EAST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_SOUTH_EAST:\n        if (aspectRatio) {\n          if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_WEST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = 0;\n        }\n\n        break;\n\n      // Move canvas\n      case ACTION_MOVE:\n        this.move(range.x, range.y);\n        renderable = false;\n        break;\n\n      // Zoom canvas\n      case ACTION_ZOOM:\n        this.zoom(getMaxZoomRatio(pointers), e.originalEvent);\n        renderable = false;\n        break;\n\n      // Create crop box\n      case ACTION_CROP:\n        if (!range.x || !range.y) {\n          renderable = false;\n          break;\n        }\n\n        offset = this.$cropper.offset();\n        left = pointer.startX - offset.left;\n        top = pointer.startY - offset.top;\n        width = cropBox.minWidth;\n        height = cropBox.minHeight;\n\n        if (range.x > 0) {\n          action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n        } else if (range.x < 0) {\n          left -= width;\n          action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n        }\n\n        if (range.y < 0) {\n          top -= height;\n        }\n\n        // Show the crop box if is hidden\n        if (!this.cropped) {\n          this.$cropBox.removeClass(CLASS_HIDDEN);\n          this.cropped = true;\n\n          if (this.limited) {\n            this.limitCropBox(true, true);\n          }\n        }\n\n        break;\n\n      default:\n    }\n\n    if (renderable) {\n      cropBox.width = width;\n      cropBox.height = height;\n      cropBox.left = left;\n      cropBox.top = top;\n      this.action = action;\n      this.renderCropBox();\n    }\n\n    // Override\n    $.each(pointers, (i, p) => {\n      p.startX = p.endX;\n      p.startY = p.endY;\n    });\n  },\n};\n","import $ from 'jquery';\nimport global from './global';\nimport {\n  CLASS_CROP,\n  CLASS_DISABLED,\n  CLASS_HIDDEN,\n  CLASS_MODAL,\n  CLASS_MOVE,\n  DATA_ACTION,\n  DRAG_MODE_CROP,\n  DRAG_MODE_MOVE,\n  DRAG_MODE_NONE,\n  EVENT_LOAD,\n  EVENT_ZOOM,\n  NAMESPACE,\n} from './constants';\nimport {\n  getContainSizes,\n  getPointersCenter,\n  getSourceCanvas,\n  isNumber,\n  isUndefined,\n  normalizeDecimalNumber,\n  objectKeys,\n} from './utilities';\n\nexport default {\n  // Show the crop box manually\n  crop() {\n    if (!this.ready || this.disabled) {\n      return;\n    }\n\n    if (!this.cropped) {\n      this.cropped = true;\n      this.limitCropBox(true, true);\n\n      if (this.options.modal) {\n        this.$dragBox.addClass(CLASS_MODAL);\n      }\n\n      this.$cropBox.removeClass(CLASS_HIDDEN);\n    }\n\n    this.setCropBoxData(this.initialCropBox);\n  },\n\n  // Reset the image and crop box to their initial states\n  reset() {\n    if (!this.ready || this.disabled) {\n      return;\n    }\n\n    this.image = $.extend({}, this.initialImage);\n    this.canvas = $.extend({}, this.initialCanvas);\n    this.cropBox = $.extend({}, this.initialCropBox);\n    this.renderCanvas();\n\n    if (this.cropped) {\n      this.renderCropBox();\n    }\n  },\n\n  // Clear the crop box\n  clear() {\n    if (!this.cropped || this.disabled) {\n      return;\n    }\n\n    $.extend(this.cropBox, {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0,\n    });\n\n    this.cropped = false;\n    this.renderCropBox();\n    this.limitCanvas(true, true);\n\n    // Render canvas after crop box rendered\n    this.renderCanvas();\n    this.$dragBox.removeClass(CLASS_MODAL);\n    this.$cropBox.addClass(CLASS_HIDDEN);\n  },\n\n  /**\n   * Replace the image's src and rebuild the cropper\n   * @param {string} url - The new URL.\n   * @param {boolean} [onlyColorChanged] - Indicate if the new image only changed color.\n   */\n  replace(url, onlyColorChanged) {\n    if (!this.disabled && url) {\n      if (this.isImg) {\n        this.$element.attr('src', url);\n      }\n\n      if (onlyColorChanged) {\n        this.url = url;\n        this.$clone.attr('src', url);\n\n        if (this.ready) {\n          this.$preview.find('img').add(this.$clone2).attr('src', url);\n        }\n      } else {\n        if (this.isImg) {\n          this.replaced = true;\n        }\n\n        // Clear previous data\n        this.options.data = null;\n        this.load(url);\n      }\n    }\n  },\n\n  // Enable (unfreeze) the cropper\n  enable() {\n    if (this.ready) {\n      this.disabled = false;\n      this.$cropper.removeClass(CLASS_DISABLED);\n    }\n  },\n\n  // Disable (freeze) the cropper\n  disable() {\n    if (this.ready) {\n      this.disabled = true;\n      this.$cropper.addClass(CLASS_DISABLED);\n    }\n  },\n\n  // Destroy the cropper and remove the instance from the image\n  destroy() {\n    const { $element } = this;\n\n    if (this.loaded) {\n      if (this.isImg && this.replaced) {\n        $element.attr('src', this.originalUrl);\n      }\n\n      this.unbuild();\n      $element.removeClass(CLASS_HIDDEN);\n    } else if (this.isImg) {\n      $element.off(EVENT_LOAD, this.start);\n    } else if (this.$clone) {\n      this.$clone.remove();\n    }\n\n    $element.removeData(NAMESPACE);\n  },\n\n  /**\n   * Move the canvas with relative offsets\n   * @param {number} offsetX - The relative offset distance on the x-axis.\n   * @param {number} offsetY - The relative offset distance on the y-axis.\n   */\n  move(offsetX, offsetY) {\n    const { left, top } = this.canvas;\n\n    this.moveTo(\n      isUndefined(offsetX) ? offsetX : left + Number(offsetX),\n      isUndefined(offsetY) ? offsetY : top + Number(offsetY),\n    );\n  },\n\n  /**\n   * Move the canvas to an absolute point\n   * @param {number} x - The x-axis coordinate.\n   * @param {number} [y=x] - The y-axis coordinate.\n   */\n  moveTo(x, y) {\n    const { canvas } = this;\n    let changed = false;\n\n    // If \"y\" is not present, its default value is \"x\"\n    if (isUndefined(y)) {\n      y = x;\n    }\n\n    x = Number(x);\n    y = Number(y);\n\n    if (this.ready && !this.disabled && this.options.movable) {\n      if (isNumber(x)) {\n        canvas.left = x;\n        changed = true;\n      }\n\n      if (isNumber(y)) {\n        canvas.top = y;\n        changed = true;\n      }\n\n      if (changed) {\n        this.renderCanvas(true);\n      }\n    }\n  },\n\n  /**\n   * Zoom the canvas with a relative ratio\n   * @param {Number} ratio - The target ratio.\n   * @param {Event} _event - The related event if any.\n   */\n  zoom(ratio, _event) {\n    const { canvas } = this;\n\n    ratio = Number(ratio);\n\n    if (ratio < 0) {\n      ratio = 1 / (1 - ratio);\n    } else {\n      ratio = 1 + ratio;\n    }\n\n    this.zoomTo((canvas.width * ratio) / canvas.naturalWidth, _event);\n  },\n\n  /**\n   * Zoom the canvas to an absolute ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Event} _event - The related event if any.\n   */\n  zoomTo(ratio, _event) {\n    const { options, pointers, canvas } = this;\n    const {\n      width,\n      height,\n      naturalWidth,\n      naturalHeight,\n    } = canvas;\n\n    ratio = Number(ratio);\n\n    if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n      const newWidth = naturalWidth * ratio;\n      const newHeight = naturalHeight * ratio;\n      let originalEvent;\n\n      if (_event) {\n        ({ originalEvent } = _event);\n      }\n\n      if (this.trigger(EVENT_ZOOM, {\n        originalEvent,\n        oldRatio: width / naturalWidth,\n        ratio: newWidth / naturalWidth,\n      }).isDefaultPrevented()) {\n        return;\n      }\n\n      if (originalEvent) {\n        const offset = this.$cropper.offset();\n        const center = pointers && objectKeys(pointers).length ?\n          getPointersCenter(pointers) : {\n            pageX: _event.pageX || originalEvent.pageX || 0,\n            pageY: _event.pageY || originalEvent.pageY || 0,\n          };\n\n        // Zoom from the triggering point of the event\n        canvas.left -= (newWidth - width) * (\n          ((center.pageX - offset.left) - canvas.left) / width\n        );\n        canvas.top -= (newHeight - height) * (\n          ((center.pageY - offset.top) - canvas.top) / height\n        );\n      } else {\n        // Zoom from the center of the canvas\n        canvas.left -= (newWidth - width) / 2;\n        canvas.top -= (newHeight - height) / 2;\n      }\n\n      canvas.width = newWidth;\n      canvas.height = newHeight;\n      this.renderCanvas(true);\n    }\n  },\n\n  /**\n   * Rotate the canvas with a relative degree\n   * @param {number} degree - The rotate degree.\n   */\n  rotate(degree) {\n    this.rotateTo((this.image.rotate || 0) + Number(degree));\n  },\n\n  /**\n   * Rotate the canvas to an absolute degree\n   * @param {number} degree - The rotate degree.\n   */\n  rotateTo(degree) {\n    degree = Number(degree);\n\n    if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n      this.image.rotate = degree % 360;\n      this.renderCanvas(true, true);\n    }\n  },\n\n  /**\n   * Scale the image on the x-axis.\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   */\n  scaleX(scaleX) {\n    const { scaleY } = this.image;\n\n    this.scale(scaleX, isNumber(scaleY) ? scaleY : 1);\n  },\n\n  /**\n   * Scale the image on the y-axis.\n   * @param {number} scaleY - The scale ratio on the y-axis.\n   */\n  scaleY(scaleY) {\n    const { scaleX } = this.image;\n\n    this.scale(isNumber(scaleX) ? scaleX : 1, scaleY);\n  },\n\n  /**\n   * Scale the image\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n   */\n  scale(scaleX, scaleY = scaleX) {\n    const { image } = this;\n    let transformed = false;\n\n    scaleX = Number(scaleX);\n    scaleY = Number(scaleY);\n\n    if (this.ready && !this.disabled && this.options.scalable) {\n      if (isNumber(scaleX)) {\n        image.scaleX = scaleX;\n        transformed = true;\n      }\n\n      if (isNumber(scaleY)) {\n        image.scaleY = scaleY;\n        transformed = true;\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n    }\n  },\n\n  /**\n   * Get the cropped area position and size data (base on the original image)\n   * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n   * @returns {Object} The result cropped data.\n   */\n  getData(rounded = false) {\n    const {\n      options,\n      image,\n      canvas,\n      cropBox,\n    } = this;\n    let data;\n\n    if (this.ready && this.cropped) {\n      data = {\n        x: cropBox.left - canvas.left,\n        y: cropBox.top - canvas.top,\n        width: cropBox.width,\n        height: cropBox.height,\n      };\n\n      const ratio = image.width / image.naturalWidth;\n\n      $.each(data, (i, n) => {\n        n /= ratio;\n        data[i] = rounded ? Math.round(n) : n;\n      });\n    } else {\n      data = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n      };\n    }\n\n    if (options.rotatable) {\n      data.rotate = image.rotate || 0;\n    }\n\n    if (options.scalable) {\n      data.scaleX = image.scaleX || 1;\n      data.scaleY = image.scaleY || 1;\n    }\n\n    return data;\n  },\n\n  /**\n   * Set the cropped area position and size with new data\n   * @param {Object} data - The new data.\n   */\n  setData(data) {\n    const { options, image, canvas } = this;\n    const cropBoxData = {};\n\n    if ($.isFunction(data)) {\n      data = data.call(this.element);\n    }\n\n    if (this.ready && !this.disabled && $.isPlainObject(data)) {\n      let transformed = false;\n\n      if (options.rotatable) {\n        if (isNumber(data.rotate) && data.rotate !== image.rotate) {\n          image.rotate = data.rotate;\n          transformed = true;\n        }\n      }\n\n      if (options.scalable) {\n        if (isNumber(data.scaleX) && data.scaleX !== image.scaleX) {\n          image.scaleX = data.scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(data.scaleY) && data.scaleY !== image.scaleY) {\n          image.scaleY = data.scaleY;\n          transformed = true;\n        }\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n\n      const ratio = image.width / image.naturalWidth;\n\n      if (isNumber(data.x)) {\n        cropBoxData.left = (data.x * ratio) + canvas.left;\n      }\n\n      if (isNumber(data.y)) {\n        cropBoxData.top = (data.y * ratio) + canvas.top;\n      }\n\n      if (isNumber(data.width)) {\n        cropBoxData.width = data.width * ratio;\n      }\n\n      if (isNumber(data.height)) {\n        cropBoxData.height = data.height * ratio;\n      }\n\n      this.setCropBoxData(cropBoxData);\n    }\n  },\n\n  /**\n   * Get the container size data.\n   * @returns {Object} The result container data.\n   */\n  getContainerData() {\n    return this.ready ? $.extend({}, this.container) : {};\n  },\n\n  /**\n   * Get the image position and size data.\n   * @returns {Object} The result image data.\n   */\n  getImageData() {\n    return this.loaded ? $.extend({}, this.image) : {};\n  },\n\n  /**\n   * Get the canvas position and size data.\n   * @returns {Object} The result canvas data.\n   */\n  getCanvasData() {\n    const { canvas } = this;\n    const data = {};\n\n    if (this.ready) {\n      $.each([\n        'left',\n        'top',\n        'width',\n        'height',\n        'naturalWidth',\n        'naturalHeight',\n      ], (i, n) => {\n        data[n] = canvas[n];\n      });\n    }\n\n    return data;\n  },\n\n  /**\n   * Set the canvas position and size with new data.\n   * @param {Object} data - The new canvas data.\n   */\n  setCanvasData(data) {\n    const { canvas } = this;\n    const { aspectRatio } = canvas;\n\n    if ($.isFunction(data)) {\n      data = data.call(this.$element);\n    }\n\n    if (this.ready && !this.disabled && $.isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        canvas.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        canvas.top = data.top;\n      }\n\n      if (isNumber(data.width)) {\n        canvas.width = data.width;\n        canvas.height = data.width / aspectRatio;\n      } else if (isNumber(data.height)) {\n        canvas.height = data.height;\n        canvas.width = data.height * aspectRatio;\n      }\n\n      this.renderCanvas(true);\n    }\n  },\n\n  /**\n   * Get the crop box position and size data.\n   * @returns {Object} The result crop box data.\n   */\n  getCropBoxData() {\n    const { cropBox } = this;\n\n    return this.ready && this.cropped ? {\n      left: cropBox.left,\n      top: cropBox.top,\n      width: cropBox.width,\n      height: cropBox.height,\n    } : {};\n  },\n\n  /**\n   * Set the crop box position and size with new data.\n   * @param {Object} data - The new crop box data.\n   */\n  setCropBoxData(data) {\n    const { cropBox } = this;\n    const { aspectRatio } = this.options;\n    let widthChanged;\n    let heightChanged;\n\n    if ($.isFunction(data)) {\n      data = data.call(this.$element);\n    }\n\n    if (this.ready && this.cropped && !this.disabled && $.isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        cropBox.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        cropBox.top = data.top;\n      }\n\n      if (isNumber(data.width) && data.width !== cropBox.width) {\n        widthChanged = true;\n        cropBox.width = data.width;\n      }\n\n      if (isNumber(data.height) && data.height !== cropBox.height) {\n        heightChanged = true;\n        cropBox.height = data.height;\n      }\n\n      if (aspectRatio) {\n        if (widthChanged) {\n          cropBox.height = cropBox.width / aspectRatio;\n        } else if (heightChanged) {\n          cropBox.width = cropBox.height * aspectRatio;\n        }\n      }\n\n      this.renderCropBox();\n    }\n  },\n\n  /**\n   * Get a canvas drawn the cropped image.\n   * @param {Object} [options={}] - The config options.\n   * @returns {HTMLCanvasElement} - The result canvas.\n   */\n  getCroppedCanvas(options = {}) {\n    if (!this.ready || !global.HTMLCanvasElement) {\n      return null;\n    }\n\n    const { canvas: canvasData } = this;\n    const source = getSourceCanvas(this.$clone[0], this.image, canvasData, options);\n\n    // Returns the source canvas if it is not cropped.\n    if (!this.cropped) {\n      return source;\n    }\n\n    const {\n      x,\n      y,\n      width: initialWidth,\n      height: initialHeight,\n    } = this.getData();\n    const aspectRatio = initialWidth / initialHeight;\n    const maxSizes = getContainSizes({\n      aspectRatio,\n      width: options.maxWidth || Infinity,\n      height: options.maxHeight || Infinity,\n    });\n    const minSizes = getContainSizes({\n      aspectRatio,\n      width: options.minWidth || 0,\n      height: options.minHeight || 0,\n    });\n    let {\n      width,\n      height,\n    } = getContainSizes({\n      aspectRatio,\n      width: options.width || initialWidth,\n      height: options.height || initialHeight,\n    });\n\n    width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n    height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = options.fillColor || 'transparent';\n    context.fillRect(0, 0, width, height);\n\n    const { imageSmoothingEnabled = true, imageSmoothingQuality } = options;\n\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n    if (imageSmoothingQuality) {\n      context.imageSmoothingQuality = imageSmoothingQuality;\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n    const sourceWidth = source.width;\n    const sourceHeight = source.height;\n\n    // Source canvas parameters\n    let srcX = x;\n    let srcY = y;\n    let srcWidth;\n    let srcHeight;\n\n    // Destination canvas parameters\n    let dstX;\n    let dstY;\n    let dstWidth;\n    let dstHeight;\n\n    if (srcX <= -initialWidth || srcX > sourceWidth) {\n      srcX = 0;\n      srcWidth = 0;\n      dstX = 0;\n      dstWidth = 0;\n    } else if (srcX <= 0) {\n      dstX = -srcX;\n      srcX = 0;\n      srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n      dstWidth = srcWidth;\n    } else if (srcX <= sourceWidth) {\n      dstX = 0;\n      srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n      dstWidth = srcWidth;\n    }\n\n    if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n      srcY = 0;\n      srcHeight = 0;\n      dstY = 0;\n      dstHeight = 0;\n    } else if (srcY <= 0) {\n      dstY = -srcY;\n      srcY = 0;\n      srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n      dstHeight = srcHeight;\n    } else if (srcY <= sourceHeight) {\n      dstY = 0;\n      srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n      dstHeight = srcHeight;\n    }\n\n    // All the numerical parameters should be integer for `drawImage`\n    // https://github.com/fengyuanchen/cropper/issues/476\n    const params = [\n      srcX,\n      srcY,\n      srcWidth,\n      srcHeight,\n    ];\n\n    // Avoid \"IndexSizeError\"\n    if (dstWidth > 0 && dstHeight > 0) {\n      const scale = width / initialWidth;\n\n      params.push(\n        dstX * scale,\n        dstY * scale,\n        dstWidth * scale,\n        dstHeight * scale,\n      );\n    }\n\n    context.drawImage(source, ...$.map(params, param => Math.floor(normalizeDecimalNumber(param))));\n    return canvas;\n  },\n\n  /**\n   * Change the aspect ratio of the crop box.\n   * @param {number} aspectRatio - The new aspect ratio.\n   */\n  setAspectRatio(aspectRatio) {\n    const { options } = this;\n\n    if (!this.disabled && !isUndefined(aspectRatio)) {\n      // 0 -> NaN\n      options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n      if (this.ready) {\n        this.initCropBox();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n    }\n  },\n\n  /**\n   * Change the drag mode.\n   * @param {string} mode - The new drag mode.\n   */\n  setDragMode(mode) {\n    const { options } = this;\n    let croppable;\n    let movable;\n\n    if (this.loaded && !this.disabled) {\n      croppable = mode === DRAG_MODE_CROP;\n      movable = options.movable && mode === DRAG_MODE_MOVE;\n      mode = (croppable || movable) ? mode : DRAG_MODE_NONE;\n\n      this.$dragBox\n        .data(DATA_ACTION, mode)\n        .toggleClass(CLASS_CROP, croppable)\n        .toggleClass(CLASS_MOVE, movable);\n\n      if (!options.cropBoxMovable) {\n        // Sync drag mode to crop box when it is not movable(#300)\n        this.$face\n          .data(DATA_ACTION, mode)\n          .toggleClass(CLASS_CROP, croppable)\n          .toggleClass(CLASS_MOVE, movable);\n      }\n    }\n  },\n};\n","import $ from 'jquery';\nimport global from './global';\nimport DEFAULTS from './defaults';\nimport TEMPLATE from './template';\nimport render from './render';\nimport preview from './preview';\nimport events from './events';\nimport handlers from './handlers';\nimport change from './change';\nimport methods from './methods';\nimport {\n  ACTION_ALL,\n  CLASS_HIDDEN,\n  CLASS_HIDE,\n  CLASS_INVISIBLE,\n  CLASS_MODAL,\n  CLASS_MOVE,\n  DATA_ACTION,\n  EVENT_CROP,\n  EVENT_ERROR,\n  EVENT_LOAD,\n  EVENT_READY,\n  NAMESPACE,\n  REGEXP_DATA_URL,\n  REGEXP_DATA_URL_JPEG,\n  REGEXP_TAG_NAME,\n} from './constants';\nimport {\n  addTimestamp,\n  arrayBufferToDataURL,\n  dataURLToArrayBuffer,\n  getImageNaturalSizes,\n  getOrientation,\n  isCrossOriginURL,\n  parseOrientation,\n} from './utilities';\n\nclass Cropper {\n  /**\n   * Create a new Cropper.\n   * @param {Element} element - The target element for cropping.\n   * @param {Object} [options={}] - The configuration options.\n   */\n  constructor(element, options = {}) {\n    if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n      throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n    }\n\n    this.element = element;\n    this.$element = $(element);\n    this.options = $.extend({}, DEFAULTS, $.isPlainObject(options) && options);\n    this.completed = false;\n    this.cropped = false;\n    this.disabled = false;\n    this.isImg = false;\n    this.limited = false;\n    this.loaded = false;\n    this.ready = false;\n    this.replaced = false;\n    this.wheeling = false;\n    this.originalUrl = '';\n    this.canvas = null;\n    this.cropBox = null;\n    this.pointers = {};\n    this.init();\n  }\n\n  init() {\n    const { $element } = this;\n    let url;\n\n    if ($element.is('img')) {\n      this.isImg = true;\n\n      // Should use `$.fn.attr` here. e.g.: \"img/picture.jpg\"\n      url = $element.attr('src') || '';\n      this.originalUrl = url;\n\n      // Stop when it's a blank image\n      if (!url) {\n        return;\n      }\n\n      // Should use `$.fn.prop` here. e.g.: \"http://example.com/img/picture.jpg\"\n      url = $element.prop('src');\n    } else if ($element.is('canvas') && global.HTMLCanvasElement) {\n      url = $element[0].toDataURL();\n    }\n\n    this.load(url);\n  }\n\n  // A shortcut for triggering custom events\n  trigger(type, data) {\n    const e = $.Event(type, data);\n\n    this.$element.trigger(e);\n\n    return e;\n  }\n\n  load(url) {\n    if (!url) {\n      return;\n    }\n\n    this.url = url;\n    this.image = {};\n\n    const { $element, options } = this;\n\n    if (!options.checkOrientation || !global.ArrayBuffer) {\n      this.clone();\n      return;\n    }\n\n    // XMLHttpRequest disallows to open a Data URL in some browsers like IE11 and Safari\n    if (REGEXP_DATA_URL.test(url)) {\n      if (REGEXP_DATA_URL_JPEG.test(url)) {\n        this.read(dataURLToArrayBuffer(url));\n      } else {\n        this.clone();\n      }\n\n      return;\n    }\n\n    const xhr = new XMLHttpRequest();\n\n    xhr.onerror = () => {\n      this.clone();\n    };\n\n    xhr.onload = () => {\n      this.read(xhr.response);\n    };\n\n    if (options.checkCrossOrigin && isCrossOriginURL(url) && $element.prop('crossOrigin')) {\n      url = addTimestamp(url);\n    }\n\n    xhr.open('get', url);\n    xhr.responseType = 'arraybuffer';\n    xhr.withCredentials = $element.prop('crossOrigin') === 'use-credentials';\n    xhr.send();\n  }\n\n  read(arrayBuffer) {\n    const { options, image } = this;\n    const orientation = getOrientation(arrayBuffer);\n    let rotate = 0;\n    let scaleX = 1;\n    let scaleY = 1;\n\n    if (orientation > 1) {\n      this.url = arrayBufferToDataURL(arrayBuffer, 'image/jpeg');\n      ({ rotate, scaleX, scaleY } = parseOrientation(orientation));\n    }\n\n    if (options.rotatable) {\n      image.rotate = rotate;\n    }\n\n    if (options.scalable) {\n      image.scaleX = scaleX;\n      image.scaleY = scaleY;\n    }\n\n    this.clone();\n  }\n\n  clone() {\n    const {\n      $element,\n      options,\n      url,\n    } = this;\n    let crossOrigin = '';\n    let crossOriginUrl;\n\n    if (options.checkCrossOrigin && isCrossOriginURL(url)) {\n      crossOrigin = $element.prop('crossOrigin');\n\n      if (crossOrigin) {\n        crossOriginUrl = url;\n      } else {\n        crossOrigin = 'anonymous';\n\n        // Bust cache (#148) when there is not a \"crossOrigin\" property\n        crossOriginUrl = addTimestamp(url);\n      }\n    }\n\n    this.crossOrigin = crossOrigin;\n    this.crossOriginUrl = crossOriginUrl;\n\n    const image = document.createElement('img');\n\n    if (crossOrigin) {\n      image.crossOrigin = crossOrigin;\n    }\n\n    image.src = crossOriginUrl || url;\n\n    const $clone = $(image);\n\n    this.$clone = $clone;\n\n    if (this.isImg) {\n      if (this.element.complete) {\n        this.start();\n      } else {\n        $element.one(EVENT_LOAD, $.proxy(this.start, this));\n      }\n    } else {\n      $clone.one(EVENT_LOAD, $.proxy(this.start, this))\n        .one(EVENT_ERROR, $.proxy(this.stop, this))\n        .addClass(CLASS_HIDE)\n        .insertAfter($element);\n    }\n  }\n\n  start() {\n    const { $clone } = this;\n    let $image = this.$element;\n\n    if (!this.isImg) {\n      $clone.off(EVENT_ERROR, this.stop);\n      $image = $clone;\n    }\n\n    getImageNaturalSizes($image[0], (naturalWidth, naturalHeight) => {\n      $.extend(this.image, {\n        naturalWidth,\n        naturalHeight,\n        aspectRatio: naturalWidth / naturalHeight,\n      });\n\n      this.loaded = true;\n      this.build();\n    });\n  }\n\n  stop() {\n    this.$clone.remove();\n    this.$clone = null;\n  }\n\n  build() {\n    if (!this.loaded) {\n      return;\n    }\n\n    // Unbuild first when replace\n    if (this.ready) {\n      this.unbuild();\n    }\n\n    const { $element, options, $clone } = this;\n    const $cropper = $(TEMPLATE);\n    const $cropBox = $cropper.find(`.${NAMESPACE}-crop-box`);\n    const $face = $cropBox.find(`.${NAMESPACE}-face`);\n\n    // Create cropper elements\n    this.$container = $element.parent();\n    this.$cropper = $cropper;\n    this.$canvas = $cropper.find(`.${NAMESPACE}-canvas`).append($clone);\n    this.$dragBox = $cropper.find(`.${NAMESPACE}-drag-box`);\n    this.$cropBox = $cropBox;\n    this.$viewBox = $cropper.find(`.${NAMESPACE}-view-box`);\n    this.$face = $face;\n\n    // Hide the original image\n    $element.addClass(CLASS_HIDDEN).after($cropper);\n\n    // Show the clone image if is hidden\n    if (!this.isImg) {\n      $clone.removeClass(CLASS_HIDE);\n    }\n\n    this.initPreview();\n    this.bind();\n\n    options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n    options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n\n    this.cropped = options.autoCrop;\n\n    if (options.autoCrop) {\n      if (options.modal) {\n        this.$dragBox.addClass(CLASS_MODAL);\n      }\n    } else {\n      $cropBox.addClass(CLASS_HIDDEN);\n    }\n\n    if (!options.guides) {\n      $cropBox.find(`.${NAMESPACE}-dashed`).addClass(CLASS_HIDDEN);\n    }\n\n    if (!options.center) {\n      $cropBox.find(`.${NAMESPACE}-center`).addClass(CLASS_HIDDEN);\n    }\n\n    if (options.cropBoxMovable) {\n      $face.addClass(CLASS_MOVE).data(DATA_ACTION, ACTION_ALL);\n    }\n\n    if (!options.highlight) {\n      $face.addClass(CLASS_INVISIBLE);\n    }\n\n    if (options.background) {\n      $cropper.addClass(`${NAMESPACE}-bg`);\n    }\n\n    if (!options.cropBoxResizable) {\n      $cropBox.find(`.${NAMESPACE}-line,.${NAMESPACE}-point`).addClass(CLASS_HIDDEN);\n    }\n\n    this.setDragMode(options.dragMode);\n    this.render();\n    this.ready = true;\n    this.setData(options.data);\n\n    // Trigger the ready event asynchronously to keep `data('cropper')` is defined\n    this.completing = setTimeout(() => {\n      if ($.isFunction(options.ready)) {\n        $element.one(EVENT_READY, options.ready);\n      }\n\n      this.trigger(EVENT_READY);\n      this.trigger(EVENT_CROP, this.getData());\n      this.completed = true;\n    }, 0);\n  }\n\n  unbuild() {\n    if (!this.ready) {\n      return;\n    }\n\n    if (!this.completed) {\n      clearTimeout(this.completing);\n    }\n\n    this.ready = false;\n    this.completed = false;\n    this.initialImage = null;\n\n    // Clear `initialCanvas` is necessary when replace\n    this.initialCanvas = null;\n    this.initialCropBox = null;\n    this.container = null;\n    this.canvas = null;\n\n    // Clear `cropBox` is necessary when replace\n    this.cropBox = null;\n    this.unbind();\n\n    this.resetPreview();\n    this.$preview = null;\n\n    this.$viewBox = null;\n    this.$cropBox = null;\n    this.$dragBox = null;\n    this.$canvas = null;\n    this.$container = null;\n\n    this.$cropper.remove();\n    this.$cropper = null;\n  }\n\n  /**\n   * Change the default options.\n   * @param {Object} options - The new default options.\n   */\n  static setDefaults(options) {\n    $.extend(DEFAULTS, $.isPlainObject(options) && options);\n  }\n}\n\nif ($.extend) {\n  $.extend(Cropper.prototype, render, preview, events, handlers, change, methods);\n}\n\nexport default Cropper;\n","import $ from 'jquery';\nimport Cropper from './cropper';\nimport {\n  NAMESPACE,\n} from './constants';\nimport {\n  isString,\n  isUndefined,\n} from './utilities';\n\nif ($.fn) {\n  const AnotherCropper = $.fn.cropper;\n\n  $.fn.cropper = function jQueryCropper(option, ...args) {\n    let result;\n\n    this.each((i, element) => {\n      const $element = $(element);\n      let data = $element.data(NAMESPACE);\n\n      if (!data) {\n        if (/destroy/.test(option)) {\n          return;\n        }\n\n        const options = $.extend({}, $element.data(), $.isPlainObject(option) && option);\n\n        data = new Cropper(element, options);\n        $element.data(NAMESPACE, data);\n      }\n\n      if (isString(option)) {\n        const fn = data[option];\n\n        if ($.isFunction(fn)) {\n          result = fn.apply(data, args);\n        }\n      }\n    });\n\n    return isUndefined(result) ? this : result;\n  };\n\n  $.fn.cropper.Constructor = Cropper;\n  $.fn.cropper.setDefaults = Cropper.setDefaults;\n  $.fn.cropper.noConflict = function noConflict() {\n    $.fn.cropper = AnotherCropper;\n    return this;\n  };\n}\n"],"names":["window","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_ERROR","EVENT_LOAD","EVENT_POINTER_DOWN","global","PointerEvent","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","NaN","isString","value","isNaN","Number","isNumber","isUndefined","proxy","fn","context","args","args2","apply","concat","objectKeys","Object","keys","obj","each","key","push","REGEXP_DECIMALS","normalizeDecimalNumber","times","test","Math","round","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","indexOf","getTransformValues","rotate","scaleX","scaleY","translateX","translateY","values","length","join","navigator","IS_SAFARI_OR_UIWEBVIEW","userAgent","getImageNaturalSizes","image","callback","naturalWidth","naturalHeight","newImage","document","createElement","onload","width","height","src","getMaxZoomRatio","pointers","pointers2","$","extend","ratios","pointerId","pointer","pointerId2","pointer2","x1","abs","startX","y1","startY","x2","endX","y2","endY","z1","sqrt","z2","ratio","sort","a","b","getPointer","endOnly","pageX","pageY","end","getPointersCenter","count","isFinite","getContainSizes","aspectRatio","isValidNumber","getRotatedSizes","degree","arc","PI","sinArc","sin","cosArc","cos","getSourceCanvas","imageNaturalWidth","imageNaturalHeight","fillColor","imageSmoothingEnabled","imageSmoothingQuality","maxWidth","Infinity","maxHeight","minWidth","minHeight","maxSizes","minSizes","min","max","canvas","getContext","params","fillStyle","fillRect","save","translate","scale","drawImage","map","floor","param","restore","fromCharCode","String","getStringFromCharCode","dataView","start","str","i","getUint8","REGEXP_DATA_URL_HEAD","dataURLToArrayBuffer","dataURL","base64","replace","binary","atob","arrayBuffer","ArrayBuffer","uint8","Uint8Array","charCodeAt","arrayBufferToDataURL","mimeType","data","btoa","getOrientation","DataView","orientation","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","setUint16","parseOrientation","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","$element","options","$container","$cropper","addClass","removeClass","css","container","minContainerWidth","minContainerHeight","viewMode","rotated","canvasWidth","canvasHeight","left","top","oldLeft","oldTop","limited","limitCanvas","initialImage","initialCanvas","isSizeLimited","isPositionLimited","cropBox","minCanvasWidth","minCanvasHeight","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","$canvas","renderImage","limitCropBox","$clone","output","autoCropArea","initialCropBox","minCropBoxWidth","minCropBoxHeight","maxCropBoxWidth","maxCropBoxHeight","movable","cropBoxMovable","$face","$cropBox","disabled","preview","completed","trigger","getData","crossOrigin","crossOriginUrl","$clone2","$preview","$viewBox","html","element","img","style","cssText","removeData","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","newWidth","newHeight","find","isFunction","cropstart","on","cropmove","cropend","crop","zoom","cropStart","zoomable","zoomOnWheel","wheel","toggleDragModeOnDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","responsive","onResize","resize","off","canvasData","cropBoxData","getCanvasData","getCropBoxData","render","setCanvasData","n","setCropBoxData","dragMode","setDragMode","$dragBox","hasClass","event","e","originalEvent","wheelZoomRatio","preventDefault","wheeling","delta","deltaY","wheelDelta","detail","action","changedTouches","touch","identifier","zoomOnTouch","target","isDefaultPrevented","cropping","change","toggleClass","modal","right","bottom","renderable","shiftKey","range","check","side","x","y","move","p","ready","onlyColorChanged","isImg","attr","add","replaced","load","loaded","originalUrl","unbuild","remove","offsetX","offsetY","moveTo","_event","zoomTo","center","rotateTo","rotatable","scalable","rounded","call","isPlainObject","widthChanged","heightChanged","HTMLCanvasElement","source","initialWidth","initialHeight","sourceWidth","sourceHeight","srcX","srcY","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","mode","croppable","Cropper","tagName","Error","DEFAULTS","init","is","prop","toDataURL","type","Event","checkOrientation","clone","read","xhr","XMLHttpRequest","onerror","response","checkCrossOrigin","open","responseType","withCredentials","send","complete","one","stop","insertAfter","$image","build","TEMPLATE","parent","append","after","initPreview","bind","autoCrop","guides","highlight","background","cropBoxResizable","setData","completing","setTimeout","unbind","resetPreview","prototype","events","handlers","methods","AnotherCropper","cropper","jQueryCropper","option","result","Constructor","setDefaults","noConflict"],"mappings":"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"}